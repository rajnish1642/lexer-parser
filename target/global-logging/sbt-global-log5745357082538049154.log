[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rajni\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rajni\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 190.9347ms
[debug]       Load.loadUnit: defsScala took 0.3385ms
[debug] [Loading] Scanning directory C:\Users\rajni\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 5.2447ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rajni\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.4232 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 115.84ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rajni\.sbt\1.0\plugins, plugins: List(<none>))) took 144.2537ms
[debug] [Loading] Done in C:\Users\rajni\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3716.4186ms
[debug]       Load.loadUnit: cleanEvalClasses took 206.5967ms
[debug]     Load.loadUnit(file:/C:/Users/rajni/.sbt/1.0/plugins/, ...) took 4125.2748ms
[debug]   Load.apply: load took 4759.3166ms
[debug]   Load.apply: resolveProjects took 4.055ms
[debug]   Load.apply: finalTransforms took 120.0918ms
[debug]   Load.apply: config.delegates took 9.7213ms
[debug]   Load.apply: Def.make(settings)... took 587.429ms
[debug]   Load.apply: structureIndex took 125.1491ms
[debug]   Load.apply: mkStreams took 2.4969ms
[info] loading global plugins from C:\Users\rajni\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12470.9982ms
[debug]           Load.loadUnit: plugins took 25.7097ms
[debug]           Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\rajni\Desktop\scalatut\project
[debug]             Load.loadUnit: mkEval took 1.6656ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rajni\Desktop\scalatut\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5967 ms
[info] loading settings for project scalatut-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(scalatut-build) took 1.8275ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatut-build, base: C:\Users\rajni\Desktop\scalatut\project, plugins: List(<none>))) took 3.8684ms
[debug] [Loading] Done in C:\Users\rajni\Desktop\scalatut\project, returning: (scalatut-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1555.0212ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.9374ms
[debug]         Load.loadUnit(file:/C:/Users/rajni/Desktop/scalatut/project/, ...) took 1591.5275ms
[debug]       Load.apply: load took 1593.0585ms
[debug]       Load.apply: resolveProjects took 0.148ms
[debug]       Load.apply: finalTransforms took 15.4102ms
[debug]       Load.apply: config.delegates took 0.503ms
[debug]       Load.apply: Def.make(settings)... took 115.424ms
[debug]       Load.apply: structureIndex took 50.7856ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\rajni\Desktop\scalatut\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[info] compiling 1 Scala source to C:\Users\rajni\Desktop\scalatut\project\target\scala-2.12\sbt-1.0\classes ...
[info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.14. Compiling...
[info]   Compilation completed in 12.824s.
[info] done compiling
[debug]     Load.loadUnit: plugins took 43991.6964ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\rajni\Desktop\scalatut
[debug]       Load.loadUnit: mkEval took 0.3645ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rajni\Desktop\scalatut, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(wartremover.WartRemover),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(wartremover.WartRemover)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,wartremover.WartRemover,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1483 ms
[info] loading settings for project scalatut from build.sbt ...
[debug]         Load.resolveProject(scalatut) took 85.2764ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalatut, base: C:\Users\rajni\Desktop\scalatut, plugins: List(<none>))) took 89.0122ms
[debug] [Loading] Done in C:\Users\rajni\Desktop\scalatut, returning: (scalatut)
[debug]     Load.loadUnit: loadedProjectsRaw took 2776.427ms
[debug]     Load.loadUnit: cleanEvalClasses took 29.8043ms
[debug]   Load.loadUnit(file:/C:/Users/rajni/Desktop/scalatut/, ...) took 46798.8591ms
[debug] Load.apply: load took 46800.9918ms
[debug] Load.apply: resolveProjects took 0.2504ms
[debug] Load.apply: finalTransforms took 60.5085ms
[debug] Load.apply: config.delegates took 0.3ms
[debug] Load.apply: Def.make(settings)... took 87.8283ms
[debug] Load.apply: structureIndex took 34.223ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to scala-parser (in build file:/C:/Users/rajni/Desktop/scalatut/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53740 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53740, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala-parser (in build file:/C:/Users/rajni/Desktop/scalatut/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
[warn] In the last 17112 seconds, 16.89 (0.1%) were spent in GC. [Heap: 0.17GB free of 0.24GB, max 1.50GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
